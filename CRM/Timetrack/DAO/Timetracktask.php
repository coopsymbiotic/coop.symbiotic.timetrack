<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from coop.symbiotic.timetrack/xml/schema/CRM/Timetrack/Timetracktask.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:14edc4e04fb55b8c4fea783cff340840)
 */
use CRM_Timetrack_ExtensionUtil as E;

/**
 * Database access object for the Timetracktask entity.
 */
class CRM_Timetrack_DAO_Timetracktask extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_timetracktask';

  /**
   * Field to show when displaying a record.
   *
   * @var string
   */
  public static $_labelField = 'title';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Timetracktask ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Case
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $case_id;

  /**
   * Task Title
   *
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $title;

  /**
   * Task Description
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $description;

  /**
   * Task status
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $state;

  /**
   * Task estimate in hours
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $estimate;

  /**
   * Expected task start date
   *
   * @var string|null
   *   (SQL type: timestamp)
   *   Note that values will be retrieved from the database as a string.
   */
  public $begin;

  /**
   * Expected task end date
   *
   * @var string|null
   *   (SQL type: timestamp)
   *   Note that values will be retrieved from the database as a string.
   */
  public $end;

  /**
   * Task Lead, FK to Contact
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $lead;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_timetracktask';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Timetracktasks') : E::ts('Timetracktask');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'case_id', 'civicrm_case', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'lead', 'civicrm_contact', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique Timetracktask ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.id',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => '1.0',
        ],
        'case_id' => [
          'name' => 'case_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Case ID'),
          'description' => E::ts('FK to Case'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.case_id',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'FKClassName' => 'CRM_Case_DAO_Case',
          'add' => '1.0',
        ],
        'title' => [
          'name' => 'title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Title'),
          'description' => E::ts('Task Title'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.title',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'add' => '1.0',
        ],
        'description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Description'),
          'description' => E::ts('Task Description'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.description',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'add' => '1.0',
        ],
        'state' => [
          'name' => 'state',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('State'),
          'description' => E::ts('Task status'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.state',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'add' => '1.0',
        ],
        'estimate' => [
          'name' => 'estimate',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Estimate'),
          'description' => E::ts('Task estimate in hours'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.estimate',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'add' => '1.0',
        ],
        'begin' => [
          'name' => 'begin',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Start Date'),
          'description' => E::ts('Expected task start date'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.begin',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'add' => '1.0',
        ],
        'end' => [
          'name' => 'end',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('End Date'),
          'description' => E::ts('Expected task end date'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.end',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'add' => '1.0',
        ],
        'lead' => [
          'name' => 'lead',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Lead'),
          'description' => E::ts('Task Lead, FK to Contact'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_timetracktask.lead',
          'table_name' => 'civicrm_timetracktask',
          'entity' => 'Timetracktask',
          'bao' => 'CRM_Timetrack_DAO_Timetracktask',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'add' => '1.0',
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'timetracktask', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'timetracktask', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
